name: Build image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch:
          - amd64
          - arm/v7
          - arm64
    steps:
      - uses: actions/checkout@v2
      - name: create tag
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/${GITHUB_REPOSITORY#*/}
          TAG=${IMAGE}:${GITHUB_SHA}-$(echo ${{ matrix.arch }} | tr -d '/')
          echo "IMAGE_TAGS=${TAG}" >> $GITHUB_ENV
      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/${{ matrix.arch }}
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_TAGS }}
  manifest:
    runs-on: ubuntu-20.04
    needs: build
    # This job is only running by pushing to main.
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
      - name: create tag
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/${GITHUB_REPOSITORY#*/}
          echo "IMAGE=${IMAGE}" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest
        run: |
          docker manifest create ${{ env.IMAGE }}:${GITHUB_SHA} \
              ${{ env.IMAGE }}:${GITHUB_SHA}-amd64 \
              ${{ env.IMAGE }}:${GITHUB_SHA}-armv7 \
              ${{ env.IMAGE }}:${GITHUB_SHA}-arm64
          docker manifest create ${{ env.IMAGE }}:latest \
              ${{ env.IMAGE }}:${GITHUB_SHA}-amd64 \
              ${{ env.IMAGE }}:${GITHUB_SHA}-armv7 \
              ${{ env.IMAGE }}:${GITHUB_SHA}-arm64

